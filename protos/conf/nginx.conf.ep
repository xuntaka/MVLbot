% my $zone = $config->{domain}; $zone =~ s/\./_/g;
% $config->{https} = {on => $config->{https}} unless ref $config->{https};
% my $is_dev = $config->{domain} ne 'bot.gorinich.net';

% if ($config->{server_req_limit}) {
	limit_req_zone $binary_remote_addr zone=<%= $zone %>_req:10m rate=<%= $config->{server_req_limit} %>r/s;
% }
% if ($config->{server_conn_limit}) {
	limit_conn_zone $binary_remote_addr zone=<%= $zone %>_conn:10m;
% }
server {
	listen    *:80;
	% if ($config->{https}{on}) {
	listen    *:443 ssl <%= $config->{https}{on} if $config->{https}{on} =~ /spdy|http2/ %>;
	% }
	% if ($config->{ipv6}) {
	%# ipv6only=on можно прописать только 1 раз, для default хоста. ipv6only включен по умолчанию c 1.3.4+
	listen [::]:80;
	% if ($config->{https}{on}) {
	listen [::]:443 ssl <%= $config->{https}{on} if $config->{https}{on} =~ /spdy|http2/ %>;
	% }
	% }
	server_name <%= $config->{domain} %> s.<%= $config->{domain} %> biz.<%= $config->{domain} %> api.<%= $config->{domain} %>;

	% if ($config->{https}{on}) {
	% if ($config->{https}{cert}) {
		ssl_certificate      /etc/ssl/certs/<%= $config->{https}{cert} %>.pem;
		ssl_certificate_key  /etc/ssl/private/<%= $config->{https}{cert} %>.key;
	% }

	% if ($config->{https}{hsts}) { # "max-age=15768000"
		%# https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security
		add_header Strict-Transport-Security "<%= $config->{https}{hsts} %>";
	% }
	% if ($config->{https}{hpkp}) { # 'pin-sha256="base64=="; max-age=expireTime'
		%# https://developer.mozilla.org/en-US/docs/Web/Security/Public_Key_Pinning
		add_header Public-Key-Pins '<%= $config->{https}{hpkp} %>';
	% }
	% }

	% if ($config->{csp}) { # "default-src 'self'; ..."
		%# https://developer.mozilla.org/ru/docs/Web/Security/CSP/CSP_policy_directives
		add_header Content-Security-Policy "<%= $config->{csp} %>";
	% }

	charset utf-8; # for *.html
	
	proxy_http_version 1.1;
	proxy_set_header   Host                $host;
	proxy_set_header   X-Real-IP           $remote_addr;
	proxy_set_header   X-Real-Host         $host;
	proxy_set_header   X-Forwarded-For     $proxy_add_x_forwarded_for;
	proxy_set_header   HTTPS               $https;
	proxy_set_header   X-Forwarded-HTTPS   $https;
	proxy_set_header   X-Forwarded-Proto   $scheme;
	proxy_set_header   Upgrade             $http_upgrade;
	proxy_set_header   Connection          "upgrade";
	
	access_log <%= $approot %>/log/nginx.access.log;
  % if ($config->{logs}{full}) {
	access_log <%= $approot %>/log/nginx.full.log full;
  % }
	error_log  <%= $approot %>/log/nginx.error.log;

	root       <%= $approot %>/public/;

	% if ($config->{https}{force_admin}) {
	if ($ssl_protocol = "") {
		rewrite ^/admin   https://$server_name$request_uri? permanent;
		rewrite ^/writer  https://$server_name$request_uri? permanent;
	}
	% }
	rewrite ^(/landing/[^\./]+)/?$ $1.html;

	rewrite ^/(favicon\.ico)$ /s/i/$1;
	rewrite ^/(apple-touch-icon.*\.png)$ /s/i/$1;
	
	proxy_intercept_errors on;
	% if (!$config->{show_errors} || $config->{no_auth}) {
	error_page 500 502 503 504 /502.html;
	% }
	error_page 410 /410.html;
	
	# Limit post body size.
	client_max_body_size 20m;

% foreach (@{$config->{block_refs} || []}) {
	if ($arg_r = '<%== $_ %>') {
		return 410;
	}
% }

	location ~ ^/admin {
		auth_basic "Lasciate ogni speranza, voi ch'entrate"; auth_basic_user_file /home/egor.baibara/MVLbot/conf/.htpasswd;
		proxy_pass http://127.0.0.1:<%= $config->{port} || 5000 %>;
		proxy_read_timeout 1800;
	}
	
	location / {
		proxy_pass http://127.0.0.1:<%= $config->{port} || 5000 %>;
		proxy_read_timeout 300;
		% if ($config->{server_req_limit}) {
			limit_req zone=<%= $zone %>_req <%= $config->{server_req_burst} ? 'burst='.$config->{server_req_burst} : ''%>;
		% }
		% if ($config->{server_conn_limit}) {
			limit_conn <%= $zone %>_conn <%= $config->{server_conn_limit} %>;
		% }
	}
	
	location = /502.html {
		expires epoch;
	}

	location ^~ /s/ {
		access_log off;
		expires    <%= $is_dev ? 0 : '30d' %>;
		add_header Cache-Control public;
	}

	location ^~ /mojo/ {
		access_log off;
		expires    <%= $is_dev ? 0 : '30d' %>;
		add_header Cache-Control public;
	}
}

server {
	listen    *:80;
#	listen [::]:80;
	server_name www.<%= $config->{domain} %>;
	rewrite (.*) http://<%= $config->{domain} %>$1 permanent;
}
